class Solution {
public:
    bool isMatching(char a, char b) {
        return a == '(' && b == ')' || a == '[' && b == ']' ||
               a == '{' && b == '}';
    }

    bool isOpening(char a) { 
        return a == '(' || a == '[' || a == '{'; 
    }

    bool isValid(string s) {
        if (s.length() % 2 != 0)
            return false;

        stack<char> st;

        for (int i = 0; i < s.length(); i++) {
            if (isOpening(s[i])) {
                st.push(s[i]);
            } else if (st.empty() == true && !isOpening(s[i])) {
                return false;
            } else if (isMatching(st.top(), s[i])) {
                st.pop();
            } else {
                return false;
            }
        }

        if (st.empty()) {
            return true;
        } else {
            return false;
        }
    }
};
